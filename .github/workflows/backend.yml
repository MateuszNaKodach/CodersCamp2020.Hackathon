name: CodersCamp2020 | ⚽️ Table Soccer Tournaments REST API - Node.js CI

on:
  push:
    paths:
      - '.github/workflows/backend.yml'
      - 'backend/**'
      - '!**/README.md'

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      CI: true

    defaults:
      run:
        working-directory: backend

    strategy:
      matrix:
        node-version: [ 14.x ]

    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run lint:ci
      - run: npm run format:ci
      - run: npm run build --if-present
      #- name: Unit & Integration Tests | Start docker-compose with backend dependencies
      #  run: docker-compose -f docker-compose.local.yaml --log-level INFO up -d
      - name: Unit & Integration Tests | Run all tests
        run: npm run test:ci
      - name: Upload test coverage report to Codecov
        uses: codecov/codecov-action@v1
        with:
          flags: backend, unittests, integrationtests
      - name: Mutation testing
        if: github.ref == 'refs/heads/develop'
        run: npx stryker run --logLevel error
        env:
          STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}
      - name: Build, Push and Release a Docker container to Heroku. # Your custom step name
        uses: gonuit/heroku-docker-deploy@v1.3.2 # GitHub action name (leave it as it is).
        if: github.ref == 'refs/heads/main'
        with:
          # Below you must provide variables for your Heroku app.

          # The email address associated with your Heroku account.
          # If you don't want to use repository secrets (which is recommended) you can do:
          # email: my.email@example.com
          email: "mateusz.nowak@coderscrew.pl"

          # Heroku API key associated with provided user's email.
          # Api Key is available under your Heroku account settings.
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}

          # Name of the heroku application to which the build is to be sent.
          heroku_app_name: "coderscamp2020-tablesoccer"

          # (Optional, default: "./")
          # Dockerfile directory.
          # For example, if you have a Dockerfile in the root of your project, leave it as follows:
          dockerfile_directory: ./backend

          # (Optional, default: "Dockerfile")
          # Dockerfile name.
          dockerfile_name: Dockerfile

          # (Optional, default: "")
          # Additional options of docker build command.
          docker_options: "--no-cache"

          # (Optional, default: "web")
          # Select the process type for which you want the docker container to be uploaded.
          # By default, this argument is set to "web".
          # For more information look at https://devcenter.heroku.com/articles/process-model
          process_type: web
