openapi: 3.0.1
info:
  title: CodersCamp Hackathon REST API
  description: REST API for online integration
  version: 0.1.0
servers:
  - url: /rest-api
    description: REST API v1
tags:
  - name: Group Quizzes
    description: Quizzes for groups
  - name: Groups
    description: Available groups
  - name: Ask Group Question
  - name: Questions
    description: Defined questions
  - name: Answer Group Question
paths:
  /current-question/{groupId}/answers:
    post:
      tags:
        - Answer Group Question
      description: Answer group queszczyn
      parameters:
        - name: groupId
          in: path
          description: Group ID
          required: true
          schema:
            type: string
            example: 2480fc2c-bbd7-427c-9439-02f76583aef5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAnswerGroupQuestionRequestBody'
      responses:
        200:
          description: Question successfully answered
  /current-question/{groupId}:
    get:
      tags:
        - Ask Group Question
      description: Fetch current group question by group ID
      parameters:
        - name: groupId
          in: path
          description: Group ID
          required: true
          schema:
            type: string
            example: 2480fc2c-bbd7-427c-9439-02f76583aef5
      responses:
        200:
          description: Current group question
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentGroupQuestionDto'
  /questions/{userId}:
    get:
      tags:
        - Questions
      description: Fetch list of all questions defined by user
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: Questions defined by requested user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserQuestionsDto'
    post:
      tags:
        - Questions
      description: Define question
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDefineQuestionsRequestBody'
      responses:
        200:
          description: Question successfully saved
  /questions/force/{groupId}:
    post:
      tags:
        - Questions
      description: Force ask question
      parameters:
        - name: groupId
          in: path
          description: Group ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: Question successfully asked
  /quizzes:
    get:
      tags:
        - Group Quizzes
      description: Get current quiz for group
      parameters:
        - name: groupId
          in: query
          description: Group Id
          required: true
          schema:
            type: string
            example: 2480fc2c-bbd7-427c-9439-02f76583aef5
      responses:
        200:
          description: Current quiz for group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentGroupQuizDto'
  /quizzes/{quizId}/solutions:
    get:
      tags:
        - Group Quizzes
      description: Get all solutions for given quiz
      parameters:
        - name: quizId
          in: path
          description: QuizId
          required: true
          schema:
            type: string
            example: 2480fc2c-bbd7-427c-9439-02f76583aef5
      responses:
        200:
          description: Solutions
    post:
      tags:
        - Group Quizzes
      description: Post quiz solution
      parameters:
        - name: quizId
          in: path
          description: QuizId
          required: true
          schema:
            type: string
            example: 2480fc2c-bbd7-427c-9439-02f76583aef5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostQuizSolutionRequestBody'
      responses:
        200:
          description: Solution successfully saved
  /quizzes/{quizId}/solutions/{userId}:
    get:
      tags:
        - Group Quizzes
      description: Get all solutions for given quiz
      parameters:
        - name: quizId
          in: path
          description: QuizId
          required: true
          schema:
            type: string
            example: 2480fc2c-bbd7-427c-9439-02f76583aef5
        - name: userId
          in: path
          description: UserId
          required: true
          schema:
            type: string
            example: 2480fc2c-bbd7-427c-9439-02f76583aef5
      responses:
        200:
          description: User solution with good answers
  /groups:
    get:
      tags:
        - Groups
      description: Get all available groups
      responses:
        200:
          description: All available groups
components:
  schemas:
    CurrentGroupQuestionDto:
      type: object
      properties:
        questionId:
          description: Identifier of the question
          type: string
          example: 2480fc2c-bbd7-427c-9439-02f76583aef5
        groupId:
          description: Identifier of the group
          type: string
          example: 5320fc2c-bbd7-427c-9439-02f76583agh7
        authorId:
          description: Identifier of the question author
          type: string
          example: 8879fc2c-bbd7-427c-9439-02f76584bgc3
        text:
          description: Question text
          type: string
          example: What is your favourite pie?
    CurrentGroupQuizDto:
      type: object
      properties:
        quizId:
          description: Identifier of the quiz
          type: string
          example: 2480fc2c-bbd7-427c-9439-02f76583aef5
        groupId:
          description: Identifier of the group which is quiz for
          type: string
          example: 2480fc2c-bbd7-427c-9439-02f76583aef5
        startedAt:
          description: When quiz was started
          type: string
          example: date
        answers:
          type: array
          items:
            $ref: '#/components/schemas/QuizAnswerDto'
          uniqueItems: true
        users:
          type: array
          items:
            $ref: '#/components/schemas/QuizUserDto'
          uniqueItems: true
    QuizUserDto:
      type: object
      properties:
        userId:
          description: Identifier of the user
          type: string
          example: 2480fc2c-bbd7-427c-9439-02f76583aef5
    QuizAnswerDto:
      type: object
      properties:
        answerId:
          description: Identifier of the user
          type: string
          example: 2480fc2c-bbd7-427c-9439-02f76583aef5
        text:
          description: Body of the answer
          type: string
          example: Moja odpowiedz na zadane pytanie
    QuizSolutionAnswerDto:
      type: object
      properties:
        answerId:
          description: Identifier of the user
          type: string
          example: 2480fc2c-bbd7-427c-9439-02f76583aef5
        userId:
          description: Identifier of the user
          type: string
          example: 2480fc2c-bbd7-427c-9439-02f76583aef5
    PostQuizSolutionRequestBody:
      type: object
      properties:
        solutionAuthorId:
          description: Identifier of the user
          type: string
          example: 2480fc2c-bbd7-427c-9439-02f76583aef5
        solution:
          type: array
          items:
            $ref: '#/components/schemas/QuizSolutionAnswerDto'
          uniqueItems: true
    PostAnswerGroupQuestionRequestBody:
      type: object
      properties:
        questionId:
          description: Identifier of the question for which answer is given
          type: string
          example: 040ac7f2-96cd-472e-a6a8-b6094d3e4e94
        answerAuthorId:
          description: Identifier of the answer author for which answer is given
          type: string
          example: 44b2b9d9-1740-42f9-89e5-c8f652ec4e11
        text:
          description: Text of the author for which answer is given
          type: string
          example: "Where were you last vacation"
      required:
        - questionId
        - answerAuthorId
        - text
    UserQuestionsDto:
      type: object
      properties:
        authorId:
          description: Identifier of the user
          type: string
          example: 2480fc2c-bbd7-427c-9439-02f76583aef5
        questions:
          type: array
          items:
            $ref: '#/components/schemas/QuestionDto'
          uniqueItems: true
    QuestionDto:
      type: object
      properties:
        questionId:
          description: Identifier of the question
          type: string
          example: 040ac7f2-96cd-472e-a6a8-b6094d3e4e94
        groupId:
          type: string
          example: 653e8ff0-1de8-43f1-b5e3-f83a635cbf0e
        text:
          type: string
          example: "Where were you last vacation"
    PostDefineQuestionsRequestBody:
      type: object
      properties:
        questionId:
          description: Identifier of the question
          type: string
          example: 040ac7f2-96cd-472e-a6a8-b6094d3e4e94
        groupId:
          type: string
          example: 653e8ff0-1de8-43f1-b5e3-f83a635cbf0e
        text:
          type: string
          example: "Where were you last vacation"
